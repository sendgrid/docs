---
layout: page
weight: 0
title: Contacts API
seo:
  title: Contacts API
  description: The SendGrid Marketing Campaigns Contacts API
  keywords: Contacts, contacts api, marketing campaigns contacts
navigation:
  show: true
---

{% info %}
Please refer to our [API Key](https://sendgrid.com/docs/Classroom/Send/api_keys.html) page for information on how to authenticate and use these endpoints.
{% endinfo %}

Custom Fields

<ul>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Create-a-Custom-Field-POST">Create a Custom Field - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-All-Custom-Fields-GET">List all Custom Fields - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-a-Custom-Field-DELETE">Delete a Custom Field - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-fields-that-are-reserved-and-can39t-be-used-for-custom-field-names-GET">List Reserved Fields - GET</a></li>
</ul>

Lists

<ul>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Create-a-List-POST">Create a List - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-All-Lists-GET">List All Lists - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-Multiple-lists-DELETE">Delete Multiple Lists - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Retrieve-a-List-GET">Retrieve a List - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Update-a-List-PATCH">Update a List - PATCH</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-a-List-DELETE">Delete a List - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-on-a-List-GET">List Recipients on a List - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Add-a-Single-Recipient-to-a-List-POST">Add a Single Recipient to a List - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-a-Single-Recipient-from-a-Single-List-DELETE">Delete a Single Recipient From a List - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Add-Multiple-Recipients-to-a-List-POST">Add Multiple Recipients To a List - POST</a></li>
</ul>

Recipients
<ul>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Add-Single-Recipient-POST">Add a Single Recipient - POST</a></li>
<li><a href="{{root_url}}{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Add-Multiple-Recipients-POST">Add Multiple Recipients - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Update-Recipient-PATCH">Update a Recipient - PATCH</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-Recipient-DELETE">Delete one or more Recipients - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-GET">List Recipients - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Retrieve-a-Recipient-GET">Retrieve a Recipient - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-a-Recipient-DELETE">Delete a Single Recipient - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Get-the-Lists-the-Recipient-Is-On-GET">Get the Lists the Recipient is On - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Get-a-Count-of-Billable-Recipients-GET">Get Count of Billable Recipients - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Get-a-Count-of-Recipients-GET">Get Count of Recipients - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Search-with-conditions-POST">Search with conditions - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Get-Recipients-Matching-Search-Criteria-GET">Get Recipients Matching Search Criteria - GET</a></li>
</ul>

Segments

<ul>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Create-a-Segment-POST">Create a Segment - POST</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-All-Segments-GET">List all Segments - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Retrieve-a-Segment-GET">Retrieve a Segment - GET</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Update-a-Segment-PATCH">Update a Segment - PATCH</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#Delete-a-Segment-DELETE">Delete a Segment - DELETE</a></li>
<li><a href="{{root_url}}/API_Reference/Web_API_v3/Marketing_Campaigns/contactdb.html#List-Recipients-On-a-Segment-GET">List Recipients on a Segment</a></li>
</ul>

FORMAT: 1A

# Contacts API

{% info %}
Treat recipient IDs as opaque values. The `id` value returned by recipient endpoints should be passed exactly as returned to endpoints that require a recipient id.
{% endinfo %}

{% info %}
Recipient IDs are generated by encoding the recipient's email address in Base64 format. You can use any Base64 encoder/decoder, for example <a href="https://www.base64encode.org/">https://www.base64encode.org/</a>, to convert a recipient ID to the recipient's email address (and vice versa).
{% endinfo %}

{% info %}
The `page_size` argument available on some calls is a "fuzzy" value. Due to how our datastore works, you may receive slightly more or less than the stated value.
{% endinfo %}

# Group Custom Fields

## Custom Fields [/contactdb/custom_fields]

### Create a Custom Field [POST]
+ Request (application/json)

    + Body

            {"name": "pet", "type": "text"}

+ Response 201

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 400

    + Body

            "" : "Returned if request body is invalid JSON"
            "type" : "Returned if custom field type is invalid or not provided"
            "name" : "Returned if custom field name is not provided"

You can create a maximum of 120 custom fields.


### List All Custom Fields [GET]

+ Response 200

    + Body

            {"custom_fields":
                [
                    { "id": 1, "name": "birthday", "type": "date" },
                    { "id": 2, "name": "middle_name", "type": "text" },
                    { "id": 3, "name": "favorite_number", "type": "number" }
                ]
            }

## Custom Fields [/contactdb/custom_fields/{custom_field_id}]

+ Parameters
    + custom_field_id (required, number) ... The id of the custom field

### Retrieve a Custom Field [GET]

+ Response 200

    + Body

            {"id":1,"name":"pet","type":"text"}

+ Response 404

     + Body

            "custom_field_id" : "Returned if custom_field_id does not exist"

### Delete a Custom Field [DELETE]

+ Response 202

+ Response 400

     + Body

            "id" : "Returned if custom_field_id is not valid"

+ Response 404

     + Body

            "custom_field_id" : "Returned if custom_field_id does not exist"


# Group Reserved Fields

## Reserved Fields [/contactdb/reserved_fields]

### List fields that are reserved and can't be used for custom field names. [GET]

+ Response 200

    + Body

            {"reserved_fields":[{"name":"first_name","type":"text"},{"name":"last_name","type":"text"},{"name":"email","type":"text"},{"name":"created_at","type":"date"},{"name":"updated_at","type":"date"},{"name":"last_emailed","type":"date"},{"name":"last_clicked","type":"date"},{"name":"last_opened","type":"date"},{"name":"my_custom_field","type":"text"},{"name":"lists","type":"set"},{"name":"campaigns","type":"set"}]}



# Group Lists

All recipient IDs are a URL-safe base64 encoding of the recipient's lower cased email address; for example if a recipient's email is `foo@example.com`, their recipient ID is `Zm9vQGV4YW1wbGUuY29t`.



## Lists [/contactdb/lists]

### Create a List [POST]

+ Request (application/json)

    + Body

            {"name": "listname"}

+ Response 201

    + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

    + Body

            "name" : "Returned if list name is a duplicate of an existing list or segment"
            "name" : "Returned if list name is not a string"
            "" : "Returned if request body is invalid JSON"


### List All Lists [GET]
Returns an empty list if you GET and no lists exist on your account.

+ Response 200

    + Body

            {"lists":[{"id":1,"name":"the jones","recipient_count":1}]}

### Delete Multiple lists [DELETE]

+ Request (application/json)

    + Body

            [1,2,3]

+ Response 204
Returned if one or more lists were deleted

    + Body

+ Response 400

     + Body

            "id" : "Returned if all list ids are not valid"


## Lists [/contactdb/lists/{list_id}]

+ Parameters
    + list_id (required,number) ... The ID of the list

### Retrieve a List [GET]

+ Response 200

     + Body

            {"id":1,"name":"listname","recipient_count":0}

+ Response 400

     + Body

            "list_id" : "Returned if list_id is not valid"

+ Response 404

     + Body

            "list_id" : "Returned if list_id does not exist"

### Update a List [PATCH]

+ Request (application/json)

     + Body

            {"name":"newlistname"}

+ Response 200

        {"id":1,"name":"newlistname","recipient_count":1}

+ Response 400

        "name" : "Returned if list name is a duplicate of existing list or segment"
        "name" : "Returned if list name is invalid or not provided"
        "list_id" : "Returned if list_id is not valid"
        "" : "Returned if request body is invalid JSON"

+ Response 404

        "list_id" : "Returned if list_id does not exist"

### Delete a List [DELETE]

+ Parameters
    + delete_contacts = `true` (optional, boolean) ... True to delete all contacts on the list in addition to deleting the list

+ Response 202

     + Body

+ Response 400

     + Body

            "list_id" : "Returned if list_id is not valid"
            "delete_contacts" : "Returned if delete_contacts is not valid"

+ Response 404

     + Body

            "list_id" : "Returned if list_id does not exist"



## Lists [/contactdb/lists/{list_id}/recipients?page_size=100&page=1]

+ Parameters
    + list_id (required, integer) ... The ID of your list
    + page = `1` (optional, integer) ... Page index of first recipient to return (must be a positive integer)
    + page_size = `100` (optional, integer) ... Number of recipients to return at a time (must be a positive integer between 1 and 1000)

### List Recipients on a List [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at":1422395108,"email":"eexampexample@example.com","first_name":"Ed","id":"YUBh","last_clicked":null,"last_emailed":null,"last_name":null,"last_opened":null,"updated_at":1422395108}]}

+ Response 400

    + Body

            "list_id" : "Returned if list_id is not a valid integer"
            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
            "page_size" : "Returned if page_size is less than 1 or greater than 1000"

+ Response 404

    + Body

            "list_id" : "Returned if list_id does not exist"

## Lists [/contactdb/lists/{list_id}/recipients/{recipient_id}]

+ Parameters
    + list_id (required, number) ... The ID of your list
    + recipient_id (required, string) ... The ID of your existing recipient

### Add a Single Recipient to a List [POST]

Individual recipients may be added to a list one at a time with a limit of 1000 requests per second, where one recipient is added to the list per request.

+ Response 201

    + Body

+ Response 400

    + Body

            "list_id" : "Returned if list_id is invalid"
            "recipient_id" : "Returned if recipient_id is invalid"

+ Response 404

    + Body

            "list_id" : "Returned if list_id does not exist"
            "recipient_id" : "Returned if recipient_id does not exist"

### Delete a Single Recipient from a Single List [DELETE]

+ Response 204

    + Body

+ Response 400

    + Body

            "list_id" : "Returned if list_id is not valid"
            "recipient_id" : "Returned if recipient_id is not valid"

+ Response 404

    + Body

            "list_id" : "Returned if list_id does not exist"
            "recipient_id" : "Returned if recipient_id does not exist"

## Lists [/contactdb/lists/{list_id}/recipients]

+ Parameters
    + list_id (required, number) ... The ID of your list

### Add Multiple Recipients to a List [POST]

Adds existing recipients to a list, passing in the recipient IDs to add. Recipient IDs should be passed exactly as they are returned from recipient endpoints.

{% warning %}
The rate at which recipients may be added to a list is limited to 1 request per second. Recipients may be added in batches of 1000.
{% endwarning %}

+ Request (application/json)

    + Body

            ["recipient_id1", "recipient_id2"]

+ Response 201

+ Response 400

    + Body

            "list_id" : "Returned if list_id is not a valid integer"
            "" : "Returned if no valid recipient ids were passed"
            "" : "Returned if no recipients were added"
            "" : "Returned if request body is invalid JSON"

+ Response 404

    + Body

            "list_id": "Returned if list_id does not exist"
            "errors": "Returned with message `No more pages` when at the end of the list"

# Group Recipients

## Recipients [/contactdb/recipients]

{% info %}
If you make a request to upload a duplicate recipient and your request would make no change to the original recipient, the original recipient will remain unchanged and its index will be added to the unmodified_indices list.
{% endinfo %}

### Add Single Recipient [POST]

The rate at which recipients may be uploaded is limited to 3 requests per second. Recipients may be uploaded in batches of 1000 per request. This results in a maximum upload rate of 1500 recipients per second.

+ Request (application/json)

     + Body

            [{"email": "example@example.com", "last_name": "Jones", "pet": "Fluffy", "age": 25}]

+ Response 201

     + Body

            {"error_count":0,"error_indices":[],"unmodified_indices":[],"new_count":1,"persisted_recipients":["am9uZXNAZXhhbXBsZS5jb20="],"updated_count":0}

+ Response 400

     + Body

            "" : "Returned if request body is not valid json"


### Add Multiple Recipients [POST]

+ Request (application/json)

     + Body

            [
                {"email": "example@example.com", "last_name": "Jones", "pet": "Fluffy", "age": 25},
                {"email": "milleexampexample@example.com", "last_name": "Miller", "pet": "FrouFrou", "age": 32},
                {"email": "invalid_email", "last_name": "Smith", "pet": "Spot", "age": 17},
                {"email": "pre-existing_email@example.com"}
            ]

+ Response 201

     + Body

            {"error_count":1,"error_indices":[2],"unmodified_indices":[3],"new_count":2,"persisted_recipients":["YUBh", "bWlsbGVyQG1pbGxlci50ZXN0"],"updated_count":0, "errors":[{"message":"Invalid email.", "error_indices":[2]}]}

+ Response 400

     + Body

            "" : "Returned if request body is not valid json"

### Update Recipient [PATCH]

Updates one or more recipients. If the recipient does not exist, it will be created. The body is a list of recipient objects.

+ Request (application/json)

     + Body

            [
              {"email": "new-email@example.com", "last_name": "Jones"},
              {"email": "pre-existing_email@example.com"}
            ]

+ Response 201

     + Body

            {"error_count":0,"error_indices":[],"unmodified_indices":[1],"new_count":0,"persisted_recipients":["am9uZXNAZXhhbXBsZS5jb20="],"updated_count":1}

+ Response 400

     + Body

            "" : "Returned if request body is not valid json"

### Delete Recipient [DELETE]

Deletes one or more recipients. The body is a list of recipient ids to delete.

{% warning %}
Use this to permanently delete your recipients from all of your contact lists and all segments if required by applicable law.
{% endwarning %}

+ Request (application/json)

     + Body

            ["recipient_id1", "recipient_id2"]

+ Response 204
Returned if at least one recipient was deleted

    + Body

+ Response 400

     + Body

            "" : "Returned if no recipients are deleted"
            "" : "Returned if all of the provided recipient ids are invalid"
            "" : "Returned if request body is not valid json"

## Recipients [/contactdb/recipients?page_size=100&page=1]

{% info %}
Batch deletion of a page makes it possible to receive an empty page of recipients before reaching the end of
the list of recipients. To avoid this issue; iterate over pages until a 404 is retrieved.
{% endinfo %}

+ Parameters
    + page = `1` (optional, integer) ... Page index of first recipients to return (must be a positive integer)
    + page_size = `100` (optional, integer) ... Number of recipients to return at a time (must be a positive integer between 1 and 1000)

### List Recipients [GET]

+ Response 200

     + Body

            {"recipients": [{"created_at":1422313607,"email":"example@example.com","first_name":null,"id":"YUBh","last_clicked":null,"last_emailed":null,"last_name":"Jones","last_opened":null,"updated_at":1422313790,"custom_fields":[{"id":23,"name":"pet","value":"Indiana","type":"text"}]}]}

+ Response 400

     + Body

            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"
            "page_size" : "Returned if page_size is less than 1 or greater than 1000"

+ Response 404

     + Body

            "errors": "Returned with message `No more pages` when at the end of the list"

## Recipients [/contactdb/recipients/{recipient_id}]

+ Parameters
    + recipient_id (required,number) ... The ID of the recipient

### Retrieve a Recipient [GET]

+ Response 200

     + Body

            {
                "created_at": 1422313607,
                "email": "example@example.com",
                "first_name": null,
                "id": "YUBh",
                "last_clicked": null,
                "last_emailed": null,
                "last_name": "Jones",
                "last_opened": null,
                "updated_at": 1422313790,
                "custom_fields": [
                    {"id":23,"name":"pet","value":"Indiana","type":"text"}
                ]
            }

+ Response 400

     + Body

            "recipient_id" : "Returned if recipient_id is not valid"

+ Response 404

     + Body

            "recipient_id" : "Returned if record for recipient id does not exist"

### Delete a Recipient [DELETE]

+ Response 204

     + Body


+ Response 400

     + Body

            "recipient_id" : "Returned if recipient_id is not valid"

+ Response 404

     + Body

            "recipient_id" : "Returned if record for recipient id does not exist"

## Recipients [/contactdb/recipients/{recipient_id}/lists]

+ Parameters
    + recipient_id (required,string) ... The ID of the recipient

### Get the Lists the Recipient Is On [GET]

+ Response 200

     + Body

            {"lists":[{"id":1,"name":"listname","recipient_count":1}]}

+ Response 400

     + Body

            "recipient_id" : "Returned if recipient_id is not valid"

+ Response 404

     + Body

            "recipient_id" : "Returned if record for the recipient id does not exist"

## Recipients [/contactdb/recipients/billable_count]

### Get a Count of Billable Recipients [GET]

+ Response 200

     + Body

            {"recipient_count": 2}

## Recipients [/contactdb/recipients/count]

### Get a Count of Recipients [GET]

+ Response 200

     + Body

            {"recipient_count": 2}

## Recipients Search [/contactdb/recipients/search]

{% anchor h3 %}
Search with conditions [POST]
{% endanchor %}

<p>
  Search using segment conditions without actually creating a segment.
  Body contains a JSON object with <code>conditions</code>, a list of conditions as described below, and an optional <code>list_id</code>, which is a valid list ID for a list to limit the search on.
</p>

<p>
  Valid operators for create and update depend on the type of the field for which you are searching.
</p>

<ul>
  <li>Dates:
    <ul>
      <li>"eq", "ne", "lt" (before), "gt" (after)
        <ul>
          <li>You may use MM/DD/YYYY for day granularity or an epoch for second granularity.</li>
        </ul>
      </li>
      <li>"empty", "not_empty"</li>
      <li>"is within"
        <ul>
          <li>You may use an <a href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 date format</a> </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Text: "contains", "eq" (is - matches the full field), "ne" (is not - matches any field where the entire field is not the condition value), "empty", "not_empty"</li>
  <li>Numbers: "eq", "lt", "gt", "empty", "not_empty"</li>
  <li>Email Clicks and Opens: "eq" (opened), "ne" (not opened)</li>
</ul>

<p>
  Field values must all be a string.
</p>

{% info %}
You can search for up to 15 different conditions per request.
{% endinfo %}

<p>
  Search conditions using "eq" or "ne" for email clicks and opens should provide a "field" of either <code>clicks.campaign_identifier</code> or <code>opens.campaign_identifier</code>.
  The condition value should be a string containing the id of a completed campaign.
</p>

<p>
  Search conditions list may contain multiple conditions, joined by an "and" or "or" in the "and_or" field.
  The first condition in the conditions list must have an empty "and_or", and subsequent conditions must all specify an "and_or".
</p>


+ Request

    + Body

            {
                "list_id":4,
                "conditions":[
                    {"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""},
                    {"field":"birthday", "value":"P0Y1M1W3DT1H4M2S", "operator": "is within", "and_or": "and"},
                    {"field":"date_joined", "value":"7", "operator": "is within", "and_or": "or"},
                    {"field":"last_clicked", "value":"01/02/2015", "operator": "gt", "and_or": "and"},
                    {"field":"clicks.campaign_identifier", "value": "513", "operator": "eq", "and_or": "or"}
                ]
            }

+ Response 201

    + Body

            {"recipients":
                [{
                    "created_at": 1422313607,
                    "email": "example@example.com",
                    "first_name": null,
                    "id": "YUBh",
                    "last_clicked": 12345,
                    "last_emailed": null,
                    "last_name": "Miller",
                    "last_opened": null,
                    "updated_at": 1422313790,
                    "custom_fields": [
                        { "id": 23, "name": "pet", "value": "Fluffy", "type": "text"}
                    ]
                }]
            }

+ Response 400

     + Body

            "list_id" : "Returned if the list_id does not exist or is invalid"
            "and_or" : "Returned if and_or and set value is not passed into the request body"
            "and_or" : "Returned if and_or is set on the only condition passed"
            "and_or" : "Returned if and_or is set on all conditions"
            "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
            "operator" : "Returned if operator and set value is not passed into the request body"
            "value" : "Returned if value and set value is not passed into the request body"
            "field" : "Returned if field and set value is not passed into the request body"
            "" : "Returned if request body is not valid json"
            "" : "Returned if invalid value is passed into one of the request body parameters"


## Search using simple criteria [/contactdb/recipients/search?{field_name}={value}&{field_name2}={value2}]

+ Parameters
    + field_name (required, text) ... The name of the field you're looking for

### Get Recipients Matching Search Criteria [GET]

<p>
  "field_name" is a variable that is substituted for your actual custom field name from your recipient.
  This endpoint is similar to making a POST with conditions whose operator is "eq" and whose "and_or" values are "and".
  Text fields must be url-encoded.
  Date fields are searchable only by epoch with a granularity of day.
  For example, <code>1422835600</code> converts to <code>Mon, 02 Feb 2015 00:06:40 GMT</code>, but internally the system will search from <code>Mon, 02 Feb 2015 00:00:00 GMT</code> through <code>Mon, 02 Feb 2015 23:59:59 GMT</code>.
</p>

+ Response 200

     + Body

            {"recipients":
                [{
                    "created_at": 1422313607,
                    "email": "example@example.com",
                    "first_name": null,
                    "id": "YUBh",
                    "last_clicked": null,
                    "last_emailed": null,
                    "last_name": "Jones",
                    "last_opened": null,
                    "updated_at": 1422313790,
                    "custom_fields": [
                        { "id": 23, "name": "pet", "value": "Indiana", "type": "text"}
                    ]
                }]
            }

+ Response 400

     + Body

            "" : "Returned if no search params are specified"
            "field" : "Returned if the provided field is invalid or does not exist"

+ Response 404

     + Body

            "errors": "Returned with message `No more pages` when at the end of the list"

# Group Segments

<p>
  Body contains a JSON object with <code>conditions</code>, a list of conditions as described below, a unique <code>name</code>, and an optional <code>list_id</code>, which is a valid list ID for a list to limit the search on.
</p>

{% info %}
The JSON accepted by this endpoint is identical to that of the [POST search with conditions](#-Search-with-conditions-POST), with the addition of requiring a unique name. (POST search with conditions is described above.)
{% endinfo %}

## Segments [/contactdb/segments]

### Create a Segment [POST]

+ Request

    + Body

            {
                "name": "Last Name Miller",
                "list_id": 4,
                "conditions": [
                    {"field": "last_name", "value":"Miller", "operator":"eq", "and_or":""},
                    {"field": "last_clicked", "value":"01/02/2015", "operator": "gt", "and_or": "and"},
                    {"field": "clicks.campaign_identifier", "value": "513", "operator": "eq", "and_or": "or"},
                    {"field": "birthday", "value": "P2D1H", "operator": "is within", "and_or": "or"}
                ]
            }

+ Response 201

    + Body

            {"id":1,"name":"Last Name Miller","list_id":4,"conditions":[{"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""},{"field":"last_clicked", "value":"01/02/2015", "operator": "gt", "and_or": "and"},{"field": "clicks.campaign_identifier", "value": "513", "operator": "eq", "and_or": "or"}], "recipient_count":0}

{% warning %}The response of the initial `POST` will return a `recipient_count` of 0 because it takes some time to populate. Follow up with a `GET` to verify segment size.{% endwarning %}

{% info %}
You can add up to 15 different conditions per segment.
{% endinfo %}

+ Response 400

     + Body

            "name" : "Returned if the name is not valid (it is not unique)"
            "list_id" : "Returned if the list_id is not valid"
            "and_or" : "Returned if and_or and set value is not passed into the request body"
            "and_or" : "Returned if and_or is set on the only condition passed"
            "and_or" : "Returned if and_or is set on all conditions"
            "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
            "operator" : "Returned if operator and set value is not passed into the request body"
            "value" : "Returned if value and set value is not passed into the request body"
            "field" : "Returned if field and set value is not passed into the request body"
            "" : "Returned if request body is not valid json"
            "" : "Returned if invalid value is passed into one of the request body parameters"

### List All Segments [GET]

+ Parameters
    + exclude = "count" (optional, string) ... add this argument if you don't need the Segment `recipient_count` value updated. This will speed up the query return.

+ Response 200

     + Body

            {"segments":[{"id":1,"name":"Last Name Miller","list_id":4,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}]}


## Segments [/contactdb/segments/{segment_id}]

+ Parameters
    + segment_id (required,number) ... The ID of the segment

### Retrieve a Segment [GET]

+ Response 200

     + Body

            {"id":1,"name":"Last Name Miller","list_id":4,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 400

     + Body

            "segment_id" : "Returned if segment_id is not valid"

+ Response 404

     + Body

            "segment_id" : "Returned if segment_id does not exist"
            "errors" : "Returned with message `No more pages` when at the end of the list"

### Update a Segment [PATCH]

+ Request (application/json)

     + Body

            {"name":"The Millers","conditions":[{"field":"last_name", "value":"Miller", "operator":"eq", "and_or":""}]}

+ Response 200

     + Body

            {"id":5,"name":"The Millers","list_id":5,"conditions":[{"field":"last_name","value":"Miller","operator":"eq","and_or":""}],"recipient_count":1}

+ Response 400

     + Body

            "segment_id" : "Returned if segment_id is not valid"
            "name" : "Returned if the name is not valid"
            "list_id" : "Returned if the list_id is not valid"
            "and_or" : "Returned if and_or and set value is not passed into the request body"
            "and_or" : "Returned if and_or is set on the only condition passed"
            "and_or" : "Returned if and_or is set on all conditions"
            "and_or" : "Returned if and_or is not set on more than one condition and less than all conditions"
            "operator" : "Returned if operator and set value is not passed into the request body"
            "value" : "Returned if value and set value is not passed into the request body"
            "field" : "Returned if field and set value is not passed into the request body"
            "" : "Returned if request body is not valid json"
            "" : "Returned if invalid value is passed into one of the request body parameters"

+ Response 404

     + Body

            "segment_id" : "Returned if segment_id does not exist"

### Delete a Segment [DELETE]

+ Parameters
    + delete_contacts = `true` (optional, boolean) ... True to delete all contacts matching the segment in addition to deleting the segment


+ Response 204

     + Body

+ Response 400

     + Body

            "segment_id" : "Returned if segment_id is not valid"
            "delete_contacts" : "Returned if delete_contacts is not a valid boolean"

+ Response 404

     + Body

            "segment_id" : "Returned if segment_id does not exist"

## Segments [/contactdb/segments/{segment_id}/recipients?page_size={page_size}&page={page}]

+ Parameters
    + segment_id (required,number) ... The ID of the segment
    + page_size = `100` (optional, integer) ... Number of recipients to return at a time (must be a positive integer from 1 to 1000)
    + page = `1` (optional, integer) ... Page index of recipients to return (must be a positive integer)

### List Recipients On a Segment [GET]

+ Response 200

    + Body

            {"recipients":[{"created_at": 1422313607,"email": "example@example.com","first_name": null,"id": "YUBh","last_clicked": null,"last_emailed": null,"last_name": "Jones","last_opened": null,"updated_at": 1422313790,"custom_fields": [{ "id": 23, "name": "pet", "value": "Indiana", "type": "text"}]}]}

+ Response 400

    + Body

            "page" : "Returned if page is not a valid integer"
            "page" : "Returned if page is less than 1"
            "page_size" : "Returned if page_size is not a valid integer"

+ Response 404

    + Body

            "segment_id" : "Returned if segment_id is not valid"
            "segment_id" : "Returned if segment_id does not exist"
