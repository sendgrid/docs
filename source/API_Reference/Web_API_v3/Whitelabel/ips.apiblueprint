---
layout: page
weight: 0
title: IPs
seo:
  title: Whitelabel IPs
  description: Whitelabel dedicated IP addresses with SendGrid over the v3 API
  keywords: ip whitelabel, whitelabel ip
navigation:
  show: true
---

FORMAT: 1A

# Group IP Whitelabel

A IP whitelabel consists of a subdomain and domain that will be used to generate a reverse DNS record for a given IP. Once SendGrid
has verified that the customer has created the appropriate A record for their IP, SendGrid will create the appropriate reverse DNS record for the IP.


## IPs Collection [/whitelabel/ips{?limit,offset,ip}]

+ Parameters
    + ip (optional, string) ... Performs prefix search with given segment of IP. For example: `192.*`
    + limit (optional, integer) ... Max number of IPs to return
    + offset (optional, integer) ... Page number to begin from. Works with limit to provide pagination.

### List all IPs [GET]
Return list of IPs. If search key is provided, returns IPs that matches.

+ Response 200 (application/json)

  + Body
        [{
            "id": 1,
            "ip": "192.168.1.1",
            "rdns": "o1.email.example.com",
            "users":
            [
                {"username":"john@example.com", "user_id":7},
                {"username": "janeexampexample@example.com", "user_id":8}
            ],
            "subdomain": "email",
            "domain": "example.com",
            "valid": true,
            "legacy": false,
            "a_record": {
                "valid": true,
                "type":"a",
                "host":"o1.email.example.com",
                "data":"192.168.1.1"
            }
        },{
            "id": 2,
            "ip": "192.168.1.2",
            "rdns": "o2.email.example.com",
            "users":
            [
                {"username":"john@example.com", "user_id":7},
                {"username": "jane@example2.com", "user_id":9}
            ],
            "subdomain": "email",
            "domain": "example.com",
            "valid": true,
            "legacy": false,
            "a_record": {
                "valid": true,
                "type":"a",
                "host":"o2.email.example.com",
                "data":"192.168.1.2"
            }
        }]

## IPs Collection [/whitelabel/ips]

### Create an IP [POST]
+ Attributes
    + ip 192.168.1.1 (required, string) - IP to whitelabel.
    + domain example.com (required, string) - Domain that will be used to send messages on the IP.
    + subdomain email (required, string) - Subdomain that will be used to send messages on the IP.

+ Request (application/json)

  + Body
        {
            "ip": "192.168.1.1",
            "subdomain": "email",
            "domain": "example.com"
        }

+ Response 201 (application/json)

  + Body
        {
            "id": 123,
            "ip": "192.168.1.2",
            "rdns": "o1.email.example.com",
            "users": [],
            "subdomain": "email",
            "domain": "example.com",
            "valid": true,
            "legacy": false,
            "a_record": {
                "valid": true,
                "type": "a",
                "host": "o1.email.example.com",
                "data": "192.168.1.2"
            }
        }

## IP [/whitelabel/ips/{id}]

### Retrieve an IP [GET]
+ Response 200 (application/json)

  + Body
        {
            "ip": "192.168.1.1",
            "rdns": "o1.email.example.com",
            "users": [{"username":"john@example.com", "user_id":7}],
            "subdomain": "email",
            "domain": "example.com",
            "valid": true,
            "legacy": false,
            "a_record": {
                "valid": true,
                "type":"a",
                "host":"o1.email.example.com",
                "data":"192.168.1.1"
            }
        }


### Delete an IP [DELETE]
+ Response 204

## Validate An IP [/whitelabel/ips/{id}/validate]

### Validate an IP [POST]

+ Response 200 (application/json)

  + Body
        {
            "id": 1,
            "valid": true,
            "validation_results": {
                "a_record": {
                    "valid": true,
                    "reason": null
                }
            }
        }


+ Response 500 (application/json)

  + Body
        {
            "errors": [{"message": "internal error getting rDNS"}]
        }
